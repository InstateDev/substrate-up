#!/usr/bin/env bash

name=$1
shift
author=$1
shift

if [[ "$name" == "" || "$name" == "-"* ]]
then
  echo "Usage: substrate-node-new <NAME> <AUTHOR>"
  exit 1
fi
if [[ "$author" == "" || "$author" == "-"* ]]
then
  echo "Usage: substrate-node-new <NAME> <AUTHOR>"
  exit 1
fi

lname="$(echo $name | tr '[:upper:]' '[:lower:]')"
dirname="${lname// /-}"

bold=$(tput bold)
normal=$(tput sgr0)

echo "${bold}Cloning project...${normal}"
if ! git clone -q https://github.com/paritytech/substrate-node-template $dirname
then
	exit 1
fi

pushd $dirname >/dev/null
rm -rf .git

echo "${bold}Customising project...${normal}"
function replace {
	find_this="$1"
	shift
	replace_with="$1"
	shift
	IFS=$'\n'
	TEMP=$(mktemp -d "${TMPDIR:-/tmp/}.XXXXXXXXXXXX")
	rmdir $TEMP
	for item in `find . -type f`
	do
		sed "s/$find_this/$replace_with/g" "$item" > $TEMP
		cat $TEMP > "$item"
	done
	rm -f $TEMP
}
replace "Template Node" "${name}"
replace template-node "${lname//[_ ]/-}"
replace template_node "${lname//[- ]/_}"
replace Anonymous "$author"

echo "${bold}Initialising repository...${normal}"
git init 2>/dev/null >/dev/null
git add * .gitignore 2>/dev/null >/dev/null
git commit -a -m "Initial clone from template node" 2>/dev/null >/dev/null

echo "${bold}Initialising webassembly build environment...${normal}"
./init.sh 2>/dev/null >/dev/null

./build.sh

echo "${bold}Building node...${normal}"
cargo build --release

echo "${bold}Chain client created in ${dirname}${normal}."
echo "To start a dev chain, run:"
echo "$ $dirname/target/release/${lname//[_ ]/-} --dev"
echo "To create a basic Bonds UI for your chain, run:"
echo "$ substrate-ui-new $name"
echo "To push to a newly created GitHub repository, inside ${dirname}, run:"
echo "$ git remote add origin git@github.com:myusername/myprojectname && git push -u origin master"
popd >/dev/null
